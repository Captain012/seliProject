{"name": "管理员账号登录", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: C:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nerror sending request for url (https://chromedriver.storage.googleapis.com/LATEST_RELEASE_112): error trying to connect: 远程主机强迫关闭了一个现有的连接。 (os error 10054)\n; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location", "trace": "service = <selenium.webdriver.chrome.service.Service object at 0x00000249730FF790>\noptions = <selenium.webdriver.chrome.options.Options object at 0x00000249730FF970>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = shutil.which(service.path)\n        try:\n>           path = SeleniumManager().driver_location(options) if path is None else path\n\nC:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.common.selenium_manager.SeleniumManager object at 0x00000249730FF940>\noptions = <selenium.webdriver.chrome.options.Options object at 0x00000249730FF970>\n\n    def driver_location(self, options: BaseOptions) -> str:\n        \"\"\"\n        Determines the path of the correct driver.\n        :Args:\n         - browser: which browser to get the driver path for.\n        :Returns: The driver path to use\n        \"\"\"\n    \n        logger.debug(\"Applicable driver not found; attempting to install with Selenium Manager (Beta)\")\n    \n        browser = options.capabilities[\"browserName\"]\n    \n        args = [str(self.get_binary()), \"--browser\", browser, \"--output\", \"json\"]\n    \n        if options.browser_version:\n            args.append(\"--browser-version\")\n            args.append(str(options.browser_version))\n    \n        binary_location = getattr(options, \"binary_location\", None)\n        if binary_location:\n            args.append(\"--browser-path\")\n            args.append(str(binary_location))\n    \n        proxy = options.proxy\n        if proxy and (proxy.http_proxy or proxy.ssl_proxy):\n            args.append(\"--proxy\")\n            value = proxy.ssl_proxy if proxy.sslProxy else proxy.http_proxy\n            args.append(value)\n    \n        if logger.getEffectiveLevel() == logging.DEBUG:\n            args.append(\"--debug\")\n    \n>       result = self.run(args)\n\nC:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:96: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nargs = ['C:\\\\python3.10\\\\lib\\\\site-packages\\\\selenium\\\\webdriver\\\\common\\\\windows\\\\selenium-manager.exe', '--browser', 'chrome', '--output', 'json']\n\n    @staticmethod\n    def run(args: List[str]) -> str:\n        \"\"\"\n        Executes the Selenium Manager Binary.\n        :Args:\n         - args: the components of the command being executed.\n        :Returns: The log string containing the driver location.\n        \"\"\"\n        command = \" \".join(args)\n        logger.debug(f\"Executing process: {command}\")\n        try:\n            completed_proc = subprocess.run(args, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n            stdout = completed_proc.stdout.decode(\"utf-8\").rstrip(\"\\n\")\n            stderr = completed_proc.stderr.decode(\"utf-8\").rstrip(\"\\n\")\n            output = json.loads(stdout)\n            result = output[\"result\"][\"message\"]\n        except Exception as err:\n            raise WebDriverException(f\"Unsuccessful command executed: {command}; {err}\")\n    \n        if completed_proc.returncode:\n>           raise WebDriverException(f\"Unsuccessful command executed: {command}.\\n{result}{stderr}\")\nE           selenium.common.exceptions.WebDriverException: Message: Unsuccessful command executed: C:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nE           error sending request for url (https://chromedriver.storage.googleapis.com/LATEST_RELEASE_112): error trying to connect: 远程主机强迫关闭了一个现有的连接。 (os error 10054)\n\nC:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\selenium_manager.py:121: WebDriverException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testCase.test_login.TestLogin object at 0x00000249730FEFE0>\ntitle = '管理员账号登录', username = '松勤老师', password = '123456'\nlocator = ['css selector', '.no-redirect'], exp_res = '首页'\n\n    @pytest.mark.parametrize(('title,username,password,locator,exp_res'),get_yaml_data(GetPath.data_path/'data_login.yaml'))\n    @allure.title('{title}')\n    @pytest.mark.logincase\n    @pytest.mark.flaky(rerun = 3,rerun_delay = 2)\n    def test_login(self,title,username,password,locator,exp_res):\n        with allure.step('1、实例化登录'):\n>           login_page = Login()\n\n..\\..\\..\\seliProject\\testCase\\test_login.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\common\\basePage.py:13: in __init__\n    self.driver = BaseDriver().get_driver()\n..\\common\\baseDriver.py:20: in get_driver\n    self.driver = webdriver.Chrome()\nC:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:47: in __init__\n    self.service.path = DriverFinder.get_path(self.service, self.options)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nservice = <selenium.webdriver.chrome.service.Service object at 0x00000249730FF790>\noptions = <selenium.webdriver.chrome.options.Options object at 0x00000249730FF970>\n\n    @staticmethod\n    def get_path(service: Service, options: BaseOptions) -> str:\n        path = shutil.which(service.path)\n        try:\n            path = SeleniumManager().driver_location(options) if path is None else path\n        except Exception as err:\n>           raise NoSuchDriverException(f\"Unable to obtain {service.path} using Selenium Manager; {err}\")\nE           selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: C:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nE           error sending request for url (https://chromedriver.storage.googleapis.com/LATEST_RELEASE_112): error trying to connect: 远程主机强迫关闭了一个现有的连接。 (os error 10054)\nE           ; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\nC:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py:44: NoSuchDriverException"}, "steps": [{"name": "1、实例化登录", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchDriverException: Message: Unable to obtain chromedriver using Selenium Manager; Message: Unsuccessful command executed: C:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\windows\\selenium-manager.exe --browser chrome --output json.\nerror sending request for url (https://chromedriver.storage.googleapis.com/LATEST_RELEASE_112): error trying to connect: 远程主机强迫关闭了一个现有的连接。 (os error 10054)\n; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location\n\n", "trace": "  File \"C:\\Users\\pan\\Desktop\\learning\\seliProject\\testCase\\test_login.py\", line 20, in test_login\n    login_page = Login()\n  File \"C:\\Users\\pan\\Desktop\\learning\\github\\seliProject\\common\\basePage.py\", line 13, in __init__\n    self.driver = BaseDriver().get_driver()\n  File \"C:\\Users\\pan\\Desktop\\learning\\github\\seliProject\\common\\baseDriver.py\", line 20, in get_driver\n    self.driver = webdriver.Chrome()\n  File \"C:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 47, in __init__\n    self.service.path = DriverFinder.get_path(self.service, self.options)\n  File \"C:\\python3.10\\lib\\site-packages\\selenium\\webdriver\\common\\driver_finder.py\", line 44, in get_path\n    raise NoSuchDriverException(f\"Unable to obtain {service.path} using Selenium Manager; {err}\")\n"}, "start": 1692685420842, "stop": 1692685421305}], "parameters": [{"name": "title", "value": "'管理员账号登录'"}, {"name": "username", "value": "'松勤老师'"}, {"name": "password", "value": "'123456'"}, {"name": "locator", "value": "['css selector', '.no-redirect']"}, {"name": "exp_res", "value": "'首页'"}], "start": 1692685420842, "stop": 1692685421306, "uuid": "97586bee-cd81-45e6-8258-753f452e1863", "historyId": "cdf4ff745415b76b2c4c7561c33b538f", "testCaseId": "50026e29e62a28fd03f4bd419465ebfb", "fullName": "testCase.test_login.TestLogin#test_login", "labels": [{"name": "feature", "value": "登录模块"}, {"name": "epic", "value": "宝利商店"}, {"name": "tag", "value": "flaky(rerun=3, rerun_delay=2)"}, {"name": "tag", "value": "logincase"}, {"name": "parentSuite", "value": "testCase"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-9J88PP3"}, {"name": "thread", "value": "13540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCase.test_login"}]}